;; Analyzed by ClojureScript 0.0-3269
{:use-macros {reaction reagent.ratom, go cljs.core.async.macros}, :excludes #{}, :name hello-world.core, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, reagent.ratom reagent.ratom, cljs.core.async cljs.core.async}, :uses {timeout cljs.core.async, atom reagent.ratom, <! cljs.core.async, chan cljs.core.async, put! cljs.core.async}, :defs {state {:name hello-world.core/state, :file "src/hello_world/core.cljs", :line 9, :column 1, :end-line 9, :end-column 15, :meta {:file "/home/juho/tmp/problems/src/hello_world/core.cljs", :line 9, :column 10, :end-line 9, :end-column 15}}, main {:protocol-inline nil, :meta {:file "/home/juho/tmp/problems/src/hello_world/core.cljs", :line 11, :column 7, :end-line 11, :end-column 11, :arglists (quote ([]))}, :name hello-world.core/main, :variadic false, :file "src/hello_world/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, start {:protocol-inline nil, :meta {:file "/home/juho/tmp/problems/src/hello_world/core.cljs", :line 31, :column 16, :end-line 31, :end-column 21, :export true, :arglists (quote ([]))}, :name hello-world.core/start, :variadic false, :file "src/hello_world/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, reagent.ratom reagent.ratom}, :cljs.analyzer/constants {:seen #{:active? :button :value :on-blur :type :on-click :not-pristine :div :foo :input :on-change}, :order [:foo :value :active? :div :input :on-change :on-blur :not-pristine :button :type :on-click]}, :doc nil}